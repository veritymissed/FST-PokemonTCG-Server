{"version":3,"sources":["static/images/gengar.png","components/NavBar.js","components/RegisterForm.js","components/LoginForm.js","components/PokemonCard.js","components/CardList.js","components/FavoriteCardList.js","components/QueryBlock.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","useContext","UserContext","userState","dispatch","console","log","navigate","useNavigate","currentPath","useLocation","pathname","font_size","classes","makeStyles","navbar_box","display","justifyContent","padding","backgroundColor","color","fontSize","center_title","color_white","fontWeight","font_weight","active_button","color_purple","non_active_button","useStyles","Box","className","Button","onClick","e","height","src","headerIcon","isLogin","currentUserEmail","style","lineHeight","margin","RegisterForm","useState","isLoading","setIsLoading","formEmail","setFormEmail","formPassword","setFormPassword","formRepeatPassword","setFormRepeatPassword","formEmailValidationError","setFormEmailValidationError","formEmailValidationErrorMessage","setFormEmailValidationErrorMessage","formPasswordValidationError","setFormPasswordValidationError","formPasswordValidationErrorMessage","setFormPasswordValidationErrorMessage","formRepeatPasswordValidationError","setFormRepeatPasswordValidationError","formRepeatPasswordValidationErrorMessage","setFormRepeatPasswordValidationErrorMessage","useEffect","getSessionStorage","currentUser","registerUser","a","validateEmailError","validate","presence","allowEmpty","email","validatePasswordError","length","minimum","MIN_PASSWORD_LENGTH","maximum","MAX_PASSWORD_LENGTH","validatePasswordRepeatError","equality","registerPromise","Promise","resolve","reject","options","form","request","error","response","statusCode","message","JSON","parse","body","res","Error","setSessionStorage","favorite_cards","type","payload","theme","register_block_container","borderRadius","width","register_block_control","marginTop","marginBottom","TextField","fullWidth","required","helperText","id","label","onChange","target","value","autoComplete","Loader","borderWidth","LoginForm","loginUser","loginPromise","stringify","user","login_block_container","login_block_control","PokemonCard","card","addTo","removeFrom","isInFavoriteListPage","inFavoriteCards","setInFavoriteCards","foundIndex","findIndex","cardInCurrentUser","styleClass","card_style","marginLeft","marginRight","paddingLeft","paddingRight","useStyleClasses","Card","sx","CardMedia","component","image","images","large","CardContent","Typography","variant","gutterBottom","name","supertype","types","hp","rarity","IconButton","flexWrap","CardList","cards","maxWidth","mx","map","FavoriteCardList","favoriteCardList","setFavoriteCardList","isUpdating","setIsUpdating","cardId","getCurrentUser","_","splice","getUpdateUserPromise","QueryBlock","isQuerying","setIsQuerying","formName","setFormDataName","formType","setFormType","formHp","setFormHp","formRarity","setFormRarity","lastTimeQueryForm","setLastTimeQueryForm","queryResult","setQueryResult","queryResultCardsArray","setQueryResultCardsArray","canLoadMore","setCanLoadMore","isLoadingMore","setIsLoadingMore","loadMoreCards","queryCardsAPI","page","data","count","pageSize","queryCards","queryString","method","uri","QUERYING_API_PAGE_SIZE","q","err","cardObject","push","query_block_container","slider_container","queryButtonText","paddingTop","paddingBottom","select_box_style_sx","minWidth","FormControl","InputLabel","Select","labelId","MenuItem","rarities","Slider","min","max","valueLabelDisplay","getAriaLabel","newValue","getAriaValueText","raritiesEsModule","typesEsModule","initialUserState","reducer","state","action","updatePayload","oldState","React","createContext","session","removeSessionStorage","jsonStringOfNewSession","localStorage","setItem","removeItem","sessionCookie","getItem","updatingUser","responseObject","Logout","loader","border","borderTop","animation","App","init","currentUserInLocalStorage","useReducer","Provider","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1022c772.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/gengar.a8db7754.png\";","import React, { useContext } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Box, Button } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport headerIcon from '../static/images/gengar.png';\n\nimport {\n  UserContext,\n  color_purple,\n  font_weight,\n  color_white,\n} from '../App.js'\n\nexport default function NavBar(props){\n  const { userState, dispatch } = useContext(UserContext);\n  console.log('userState in NavBar', userState);\n  let navigate = useNavigate();\n  const currentPath = useLocation().pathname;\n\n  let font_size = \"17px\";\n  let useStyles = makeStyles({\n    navbar_box: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      padding: \"8px 16px 8px 16px\",\n      backgroundColor: \"rgb(36, 37, 38)\",\n      color: \"#f5f6f7\",\n      fontSize: \"16px\",\n    },\n    center_title: {\n      padding: \"8px 16px 8px 16px\",\n      color: color_white,\n      fontSize: font_size,\n      fontWeight: font_weight,\n    },\n    active_button:{\n      color: color_purple,\n      fontSize: font_size,\n      fontWeight: font_weight,\n    },\n    non_active_button: {\n      color: color_white,\n      fontSize: \"14px\",\n    },\n  });\n\n\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.navbar_box}>\n      <Box>\n        <Button onClick={(e)=>{\n          navigate('/')\n        }}><img height=\"30\" src={headerIcon}/>\n          <Box className={(currentPath === \"/\") ? classes.active_button : classes.non_active_button}>FST Pokémon Tcg</Box>\n        </Button>\n      </Box>\n\n      {!userState.isLogin && (\n        <Box>\n        <Button onClick={(e)=>{\n          navigate('/register')\n        }}>\n        <Box className={(currentPath === \"/register\") ? classes.active_button : classes.non_active_button}>Register</Box>\n        </Button>\n        <Button onClick={(e) => {\n          navigate('/login')\n        }}>\n        <Box className={(currentPath === \"/login\") ? classes.active_button : classes.non_active_button}>Login</Box>\n        </Button>\n        </Box>\n      )}\n      {userState.isLogin && (\n        <>\n        <Box className={classes.center_title}>{userState.currentUserEmail}</Box>\n        <Box>\n        <Button onClick={(e) => {navigate('/favorite_list')}}>\n          <Box display=\"flex\" className={(currentPath === \"/favorite_list\") ? classes.active_button : classes.non_active_button}><Box style={{lineHeight: \"10px\", margin: \"0px 3px\"}}><FavoriteIcon></FavoriteIcon></Box></Box>\n        </Button>\n        <Button onClick={(e)=>{\n          navigate('/logout');\n        }}>\n          <Box className={classes.non_active_button}>Logout</Box>\n        </Button>\n        </Box>\n        </>\n      )}\n    </Box>\n  );\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, TextField, Button } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport {\n  UserContext,\n  Loader,\n  setSessionStorage,\n  getSessionStorage,\n  color_white,\n  MIN_PASSWORD_LENGTH,\n  MAX_PASSWORD_LENGTH,\n} from '../App.js'\n\nimport * as validate from 'validate.js';\nimport request from 'request';\n\nexport default function RegisterForm(props){\n  const { dispatch } = useContext(UserContext);\n\n  const navigate = useNavigate();\n  let [isLoading, setIsLoading] = useState(false);\n\n  let [formEmail, setFormEmail] = useState(\"\");\n  let [formPassword, setFormPassword] = useState(\"\");\n  let [formRepeatPassword, setFormRepeatPassword] = useState(\"\");\n\n  //For form input validation\n  let [formEmailValidationError, setFormEmailValidationError] = useState(false);\n  let [formEmailValidationErrorMessage, setFormEmailValidationErrorMessage] = useState(\"\");\n\n  let [formPasswordValidationError, setFormPasswordValidationError] = useState(false);\n  let [formPasswordValidationErrorMessage, setFormPasswordValidationErrorMessage] = useState(\"\");\n\n  let [formRepeatPasswordValidationError, setFormRepeatPasswordValidationError] = useState(false);\n  let [formRepeatPasswordValidationErrorMessage, setFormRepeatPasswordValidationErrorMessage] = useState(\"\");\n\n  useEffect(()=>{\n    const {currentUser} = getSessionStorage();\n    if(currentUser) navigate('/')\n  }, [navigate])\n\n  let registerUser = async () => {\n    let validateEmailError = validate.single(formEmail, {presence: {allowEmpty: false}, email: true});\n    if(validateEmailError) {\n      setFormEmailValidationError(true);\n      setFormEmailValidationErrorMessage(validateEmailError[0]);\n      return;\n    }\n\n    let validatePasswordError = validate.single(formPassword, {presence: {allowEmpty: false}, length: {minimum: MIN_PASSWORD_LENGTH, maximum\n: MAX_PASSWORD_LENGTH}});\n\n    if(validatePasswordError) {\n      setFormPasswordValidationError(true);\n      setFormPasswordValidationErrorMessage(validatePasswordError[0]);\n      return;\n    }\n\n    let validatePasswordRepeatError = validate({formPassword, formRepeatPassword}, {\n      formRepeatPassword: {\n        equality: \"formPassword\"\n      }\n    });\n    console.log('validatePasswordRepeatError', validatePasswordRepeatError)\n    if(validatePasswordRepeatError) {\n      setFormRepeatPasswordValidationError(true);\n      setFormRepeatPasswordValidationErrorMessage(validatePasswordRepeatError.formRepeatPassword[0]);\n      return;\n    }\n\n    let registerPromise = new Promise(function(resolve, reject) {\n      let options = {\n        'method': 'POST',\n        'url': 'http://localhost:3000/users/',\n        'headers': {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        form: {\n          'email': formEmail,\n          'password': formPassword\n        }\n      };\n      request(options, function (error, response) {\n        try {\n          if (error) throw error;\n          else{\n            resolve({\n              statusCode: response.statusCode,\n              message: JSON.parse(response.body)\n            });\n          }\n        } catch (e) {\n          throw error;\n        }\n      });\n\n    });\n\n    try {\n      if(isLoading) return;\n      setIsLoading(true)\n      let res = await registerPromise;\n      console.log(res)\n      if(res.statusCode !== 201) throw new Error(res.message);\n      else {\n        setSessionStorage({currentUser: {\n          email: formEmail,\n          favorite_cards: []\n        }})\n        dispatch({type: 'login', payload: { currentUserEmail: formEmail, favorite_cards: []}})\n        navigate('/');\n      }\n    } catch (e) {\n      console.log(e)\n      setFormEmailValidationError(true);\n      setFormEmailValidationErrorMessage(e.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  let useStyles = makeStyles((theme)=> ({\n    register_block_container:{\n      borderRadius: \"5px\",\n      width: \"400px\",\n      margin: \"40px auto 10px auto\",\n      padding: \"15px 30px 15px 30px\",\n      backgroundColor: color_white,\n    },\n    register_block_control: {\n      marginTop: \"10px\",\n      marginBottom: \"10px\",\n    }\n  }));\n  const classes = useStyles();\n\n  return(\n    <Box className={classes.register_block_container}>\n      <Box className={classes.register_block_control}>\n        <TextField fullWidth\n        required\n        error={formEmailValidationError}\n        helperText={formEmailValidationErrorMessage}\n        id=\"outlined-required\"\n        label=\"Email\"\n        onChange={(e) => {\n          setFormEmailValidationError(false);\n          setFormEmailValidationErrorMessage(\"\");\n          setFormEmail(e.target.value);\n        }}\n        />\n      </Box>\n      <Box className={classes.register_block_control}>\n        <TextField fullWidth\n        id=\"outlined-password-input\"\n        error={formPasswordValidationError}\n        helperText={formPasswordValidationErrorMessage}\n        label={`Password(${MIN_PASSWORD_LENGTH}-${MAX_PASSWORD_LENGTH} char)`}\n        type=\"password\"\n        autoComplete=\"current-password\"\n        onChange={(e) => {\n          setFormPasswordValidationError(false);\n          setFormPasswordValidationErrorMessage(\"\");\n          setFormPassword(e.target.value);\n        }}\n        />\n      </Box>\n      <Box className={classes.register_block_control}>\n        <TextField fullWidth\n        id=\"outlined-password-input\"\n        error={formRepeatPasswordValidationError}\n        helperText={formRepeatPasswordValidationErrorMessage}\n        label=\"Repeat password\"\n        type=\"password\"\n        autoComplete=\"current-password\"\n        onChange={(e) => {\n          setFormRepeatPasswordValidationError(false);\n          setFormRepeatPasswordValidationErrorMessage(\"\");\n          setFormRepeatPassword(e.target.value);\n        }}\n        />\n      </Box>\n      <Button onClick={(e) => {\n        registerUser()\n      }}>Register\n      { isLoading && (<Loader width={15} height={15} borderWidth={6}></Loader>) }\n      </Button>\n    </Box>\n  )\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, TextField, Button } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport {\n  UserContext,\n  Loader,\n  setSessionStorage,\n  color_white,\n  MIN_PASSWORD_LENGTH,\n  MAX_PASSWORD_LENGTH,\n} from '../App.js';\n\nimport * as validate from 'validate.js';\nimport request from 'request';\n\nexport default function LoginForm(){\n  const { userState, dispatch } = useContext(UserContext);\n  console.log('userState in LoginForm', userState);\n\n  const navigate = useNavigate();\n  let [isLoading, setIsLoading] = useState(false);\n\n  let [formEmail, setFormEmail] = useState(\"\");\n  let [formPassword, setFormPassword] = useState(\"\");\n\n  //For form input validation\n  let [formEmailValidationError, setFormEmailValidationError] = useState(false);\n  let [formEmailValidationErrorMessage, setFormEmailValidationErrorMessage] = useState(\"\");\n\n  let [formPasswordValidationError, setFormPasswordValidationError] = useState(false);\n  let [formPasswordValidationErrorMessage, setFormPasswordValidationErrorMessage] = useState(\"\");\n  //\n\n  useEffect(()=>{\n    console.log('userState.isLogin', userState.isLogin)\n    if(userState.isLogin) navigate(\"/\")\n  }, [navigate])\n\n  let loginUser = async () => {\n    let validateEmailError = validate.single(formEmail, {presence: {allowEmpty: false}, email: true});\n    if(validateEmailError) {\n      setFormEmailValidationError(true);\n      setFormEmailValidationErrorMessage(validateEmailError[0]);\n      return;\n    }\n\n    let validatePasswordError = validate.single(formPassword, {presence: {allowEmpty: false}, length: {minimum: MIN_PASSWORD_LENGTH, maximum\n: MAX_PASSWORD_LENGTH}});\n\n    if(validatePasswordError) {\n      setFormPasswordValidationError(true);\n      setFormPasswordValidationErrorMessage(validatePasswordError[0]);\n      return;\n    }\n\n    let loginPromise = new Promise(function(resolve, reject) {\n      let options = {\n        'method': 'POST',\n        'url': 'http://localhost:3000/auth/login',\n        'headers': {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"username\": formEmail,\n          \"password\": formPassword\n        })\n      };\n      request(options, function (error, response) {\n        if (error) throw error;\n        resolve(JSON.parse(response.body));\n      });\n\n    });\n\n    try {\n      if(isLoading) return;\n      setIsLoading(true)\n      let res = await loginPromise;\n      console.log('login res', res)\n      if(res.statusCode === 401) {\n        setFormPasswordValidationError(true);\n        setFormEmailValidationError(true);\n        setFormEmailValidationErrorMessage(\"Email or password not correct.\");\n        throw new Error(\"Login user authentication error!\");\n      }\n\n      setSessionStorage({currentUser: res.user})\n      dispatch({type: 'login', payload: { currentUserEmail: res.user.email, favorite_cards: res.user.favorite_cards }})\n      navigate('/');\n    } catch (e) {\n      console.log(e)\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  let useStyles = makeStyles((theme)=> ({\n    login_block_container:{\n      borderRadius: \"5px\",\n      width: \"400px\",\n      margin: \"40px auto 10px auto\",\n      padding: \"15px 30px 15px 30px\",\n      backgroundColor: color_white,\n    },\n    login_block_control: {\n      marginTop: \"10px\",\n      marginBottom: \"10px\",\n    }\n  }));\n  const classes = useStyles();\n  return (\n    <Box className={classes.login_block_container}>\n      <Box className={classes.login_block_control}>\n        <TextField fullWidth\n        required\n        error={formEmailValidationError}\n        helperText={formEmailValidationErrorMessage}\n        id=\"outlined-required\"\n        label=\"Email\"\n        onChange={(e) => {\n          setFormEmailValidationError(false);\n          setFormEmailValidationErrorMessage(\"\");\n          setFormEmail(e.target.value);\n        }}\n        />\n      </Box>\n      <Box className={classes.login_block_control}>\n        <TextField fullWidth\n        id=\"outlined-password-input\"\n        error={formPasswordValidationError}\n        helperText={formPasswordValidationErrorMessage}\n        label={`Password(${MIN_PASSWORD_LENGTH}-${MAX_PASSWORD_LENGTH} char)`}\n        type=\"password\"\n        autoComplete=\"current-password\"\n        onChange={(e) => {\n          setFormPasswordValidationError(false);\n          setFormPasswordValidationErrorMessage(\"\");\n          setFormPassword(e.target.value);\n        }}\n        />\n      </Box>\n\n      <Button onClick={(e) => {\n        loginUser()\n      }}>\n      Login\n      {isLoading && (<Loader width={15} height={15} borderWidth={6}></Loader>)}\n      </Button>\n    </Box>\n  )\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { makeStyles } from '@mui/styles';\n\nimport { Box, Button, Typography } from '@mui/material';\nimport { Card, CardMedia, CardContent, CardActions } from '@mui/material';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport {\n  UserContext,\n} from '../App.js'\n\nexport default function PokemonCard(props){\n  const { card,  addTo, removeFrom } = props;\n\n  const { userState, dispatch } = useContext(UserContext);\n\n  let [isInFavoriteListPage, setIsInFavoriteListPage] = useState(useLocation().pathname === '/favorite_list');\n\n  let [inFavoriteCards, setInFavoriteCards] = useState(false);\n  useEffect(() => {\n    let foundIndex = userState.favorite_cards.findIndex((cardInCurrentUser) => cardInCurrentUser.id === card.id);\n    if(foundIndex >= 0) setInFavoriteCards(true);\n    else setInFavoriteCards(false);\n  }, [userState, card.id]);\n\n\n  let useStyleClasses = makeStyles((theme) => ({\n    card_style: {\n      marginTop: '10px',\n      marginBottom: '10px',\n      // marginLeft: 'auto',\n      // marginRight: 'auto',\n      marginLeft: '7.5px',\n      marginRight: '7.5px',\n      paddingLeft: '5px',\n      paddingRight: '5px'\n    },\n  }))\n  let styleClass = useStyleClasses();\n\n  return(\n  <Card sx={{ width: 200 }} className={styleClass.card_style}>\n    <CardMedia\n      component=\"img\"\n      image={card.images.large}\n    />\n    <CardContent>\n      <Typography variant=\"h5\" gutterBottom component=\"div\">{card.name || 'Name not exist'}</Typography>\n      <Typography variant=\"subtitle2\" gutterBottom component=\"div\">\n        Supertype: {card.supertype|| 'No data'}\n      </Typography>\n      {card.types && card.types.length > 0 && (\n       <Typography variant=\"subtitle2\" gutterBottom component=\"div\">\n          Type: {card.types|| 'No data'}\n        </Typography>\n      )}\n      <Typography variant=\"subtitle2\" gutterBottom component=\"div\">\n        HP: {card.hp || 'No data'}\n      </Typography>\n      <Typography variant=\"subtitle2\" gutterBottom component=\"div\">\n        Rarity: {card.rarity|| 'No data'}\n      </Typography>\n      {userState.isLogin && !isInFavoriteListPage && (\n        <Box display=\"flex\" justifyContent=\"flex-end\">\n          {inFavoriteCards && (\n            <IconButton color=\"primary\" onClick={(e)=>{\n              removeFrom(card.id);\n            }}>\n            <FavoriteIcon></FavoriteIcon>\n            </IconButton>\n          )}\n          {!inFavoriteCards && (\n            <IconButton color=\"primary\" onClick={(e)=>{\n              addTo(card);\n            }}>\n            <FavoriteBorderIcon></FavoriteBorderIcon>\n            </IconButton>\n          )}\n        </Box>\n      )}\n      {userState.isLogin && isInFavoriteListPage && (\n        <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"flex-end\">\n        <Button onClick={(e) => {\n          removeFrom(card.id);\n        }} color=\"info\">\n        <DeleteIcon></DeleteIcon>\n        </Button>\n        </Box>\n      )}\n    </CardContent>\n  </Card>)\n}\n","import { Box } from '@mui/material';\nimport PokemonCard from './PokemonCard';\n\nexport default function CardList(props){\n  const { cards, addTo, removeFrom } = props;\n\n  return (\n    <Box sx={{display: \"fex\", justifyContent: \"flex-start\"}} flexWrap=\"wrap\" maxWidth=\"900px\" mx=\"auto\">\n    {\n      cards.map((card) => (\n        <PokemonCard card={card} addTo={addTo} removeFrom={removeFrom}></PokemonCard>\n      ))\n    }\n    </Box>\n  )\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport CardList from './CardList';\n\nimport {\n  UserContext,\n  getCurrentUser,\n  setSessionStorage,\n  getUpdateUserPromise,\n} from '../App.js'\n\nimport * as _ from 'lodash';\n\nexport default function FavoriteCardList(props){\n  const { userState, dispatch } = useContext(UserContext);\n  console.log('userState in FavoriteCardList', userState);\n  let [favoriteCardList, setFavoriteCardList] = useState(userState.favorite_cards);\n\n  let navigate = useNavigate();\n  useEffect(() => {\n    if(!userState.isLogin) {\n      navigate('/login');\n    }\n    setFavoriteCardList(userState.favorite_cards);\n  },[userState]);\n\n\n  let [isUpdating, setIsUpdating] = useState(false);\n\n  let removeFrom = async (cardId) => {\n    console.log(`card id = ${cardId}`);\n    if(isUpdating) return\n    let currentUser = getCurrentUser();\n    if(_.isEmpty(currentUser)) return;\n\n    let foundIndex = currentUser.favorite_cards.findIndex((cardInCurrentUser) => cardInCurrentUser.id === cardId);\n    if(foundIndex < 0) return;\n    currentUser.favorite_cards.splice(foundIndex, 1);\n    setSessionStorage({currentUser})\n\n    try {\n      setIsUpdating(true);\n      await getUpdateUserPromise(currentUser, {favorite_cards: currentUser.favorite_cards || []});\n      dispatch({type: \"update_favorite_cards\", payload: {favorite_cards: currentUser.favorite_cards}});\n    } catch (e) {\n      console.log(e)\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n\n  return (<CardList cards={favoriteCardList} removeFrom={removeFrom}></CardList>)\n}\n","import React, { useState, useContext } from 'react';\nimport { Box, TextField, Button } from '@mui/material';\nimport { FormControl } from '@mui/material';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport Slider from '@mui/material/Slider';\nimport { makeStyles } from '@mui/styles';\n\nimport CardList from './CardList';\n\nimport request from 'request';\nimport * as _ from 'lodash';\n\nimport {\n  UserContext,\n  getCurrentUser,\n  setSessionStorage,\n  getUpdateUserPromise,\n  color_white,\n  types,\n  rarities,\n  Loader,\n  QUERYING_API_PAGE_SIZE,\n} from '../App.js'\n\nexport default function QueryBlock(props){\n  const { userState, dispatch } = useContext(UserContext);\n  // console.log('userState in QueryBlock', userState);\n\n  const [isQuerying, setIsQuerying] = useState(false);//is querying API state now\n  let [isUpdating, setIsUpdating] = useState(false);\n\n  const [formName, setFormDataName] = useState('');\n  const [formType, setFormType] = useState('');\n  const [formHp, setFormHp] = useState([0, 500]);\n  const [formRarity, setFormRarity] = useState('');\n\n  const [lastTimeQueryForm, setLastTimeQueryForm] = useState({});\n\n  const [queryResult, setQueryResult] = useState(null);\n  const [queryResultCardsArray, setQueryResultCardsArray] = useState([]);\n  const [canLoadMore, setCanLoadMore] = useState(false);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n\n  const loadMoreCards = async () => {\n    try {\n      if(isQuerying) return;\n      else setIsQuerying(true);\n\n\n      setIsLoadingMore(true);\n      let res = await queryCardsAPI(lastTimeQueryForm, queryResult.page + 1);\n      setQueryResultCardsArray([...queryResultCardsArray, ...res.data]);\n      setQueryResult(res);\n\n      //same as in queryCards\n      if(res.data.length && res.count === res.pageSize) {\n        setCanLoadMore(true);\n        setLastTimeQueryForm(lastTimeQueryForm);\n      }\n      else setCanLoadMore(false);\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setIsQuerying(false);\n      setIsLoadingMore(false);\n    }\n  };\n\n  const queryCards = async () => {\n    try {\n      if(isQuerying) return;\n      else setIsQuerying(true);\n\n      //Controller loader animation, load more button and remove last time querying cards\n      setQueryResultCardsArray([]);\n      setCanLoadMore(false);\n\n      let form = {\n        name: formName,\n        type: formType,\n        hp: formHp,\n        rarity: formRarity\n      };\n\n      let res = await queryCardsAPI(form);\n      setQueryResultCardsArray(res.data);\n      setQueryResult(res);\n\n      //same as in loadMoreCards\n      if(res.data.length && res.count === res.pageSize) {\n        setCanLoadMore(true);\n        setLastTimeQueryForm(form);\n      }\n      else setCanLoadMore(false);\n    } catch (e) {\n      setQueryResultCardsArray([]);\n      console.log(e);\n    } finally {\n      setIsQuerying(false);\n    }\n  };\n\n  const queryCardsAPI = async (form = {\n    name: '',\n    type: '',\n    formHp: [0,500],\n    rarity: ''\n  }, page = 1) => {\n    console.log('form.name', form.name)\n    console.log('form.type', form.type)\n    console.log('form.hp', form.hp)\n    console.log('form.rarity', form.rarity)\n    console.log('page', page)\n    let queryString = '';\n    if(form.name.length) queryString += `name:\"*${form.name}*\" `;\n    if(form.type.length) queryString += `types:${form.type} `;\n    if(form.rarity.length) queryString += `rarity:\"${form.rarity}\" `\n\n    queryString += `hp:[${form.hp[0]} TO ${form.hp[1]}] `\n\n    console.log('queryString', queryString)\n    return new Promise(function(resolve) {\n      try {\n        request({\n          method: 'GET',\n          uri: `https://api.pokemontcg.io/v2/cards/?q=${queryString}&pageSize=${QUERYING_API_PAGE_SIZE}&page=${page}`,\n          q: queryString,\n        }, function(err, res, body){\n          if(err) throw err\n          else resolve(JSON.parse(body))\n        });\n      } catch (e) {\n        throw e\n      }\n    })\n  };\n\n  let addTo = async (cardObject) => {\n    if(isUpdating) return\n\n    const currentUser = getCurrentUser();\n    if(_.isEmpty(currentUser)) return;\n\n    let foundIndex = currentUser.favorite_cards.findIndex((cardInCurrentUser) => cardInCurrentUser.id === cardObject.id);\n    if(foundIndex >= 0) return;\n\n    currentUser.favorite_cards.push(cardObject);\n    setSessionStorage({currentUser})\n\n    try {\n      await getUpdateUserPromise(currentUser, {favorite_cards: currentUser.favorite_cards || []});\n      dispatch({type: \"update_favorite_cards\", payload: {favorite_cards: currentUser.favorite_cards}});\n    } catch (e) {\n      console.log(e)\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n\n  let removeFrom = async (cardId) => {\n    console.log(`card id = ${cardId}`);\n    if(isUpdating) return\n    const currentUser = getCurrentUser();\n    if(_.isEmpty(currentUser)) return;\n\n    let foundIndex = currentUser.favorite_cards.findIndex((cardInCurrentUser) => cardInCurrentUser.id === cardId);\n    if(foundIndex < 0) return;\n    currentUser.favorite_cards.splice(foundIndex, 1);\n    setSessionStorage({currentUser})\n\n    try {\n      setIsUpdating(true);\n      await getUpdateUserPromise(currentUser, {favorite_cards: currentUser.favorite_cards || []})\n      dispatch({type: \"update_favorite_cards\", payload: {favorite_cards: currentUser.favorite_cards}});\n    } catch (e) {\n      console.log(e)\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n\n  let useStyles = makeStyles((theme)=> ({\n    query_block_container:{\n      borderRadius: \"5px\",\n      width: \"80%\",\n      margin: \"40px auto 10px auto\",\n      padding: \"15px 30px 15px 30px\",\n      backgroundColor: color_white,\n      display: \"flex\",\n    },\n    slider_container: {\n      color: \"#626263\",\n      width: \"400px\",\n      padding: \"5px 5px 5px 5px\",\n      marginLeft: \"20px\",\n      marginRight: \"20px\",\n    },\n    queryButtonText: {\n      fontWeight: \"500\",\n      fontSize: '16px',\n      paddingTop: \"10px\",\n      paddingBottom: \"10px\",\n    }\n  }))\n\n  const classes = useStyles();\n\n  let select_box_style_sx = {\n    minWidth: 120,\n    marginLeft: \"5px\",\n    marginRight: \"5px\",\n  }\n\n  return (\n    <Box >\n      <Box className={classes.query_block_container}>\n        <Box sx={select_box_style_sx}>\n          <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" onChange={(e) => {setFormDataName(e.target.value)}} />\n        </Box>\n\n        <Box sx={select_box_style_sx}>\n        <FormControl fullWidth>\n          <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\n          <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={formType}\n          label=\"Type\"\n          onChange={(e)=>{\n            setFormType(e.target.value);\n          }}\n          >\n          <MenuItem value={''}>None</MenuItem>\n          {types.map((type) => (\n            <MenuItem value={type}>{type}</MenuItem>\n          ))}\n          </Select>\n        </FormControl>\n        </Box>\n\n        <Box sx={select_box_style_sx}>\n        <FormControl fullWidth>\n          <InputLabel id=\"demo-simple-select-label\">Rarity</InputLabel>\n          <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={formRarity}\n          label=\"Rarity\"\n          onChange={(e)=>{\n            setFormRarity(e.target.value);\n          }}\n          >\n          <MenuItem value={''}>None</MenuItem>\n          {rarities.map((rarity) => (\n            <MenuItem value={rarity}>{rarity}</MenuItem>\n          ))}\n          </Select>\n        </FormControl>\n        </Box>\n\n        <Box className={classes.slider_container}>\n        <Box>HP range</Box>\n        <Slider\n        min={0} max={500}\n        valueLabelDisplay=\"auto\"\n        getAriaLabel={() => 'HP range'}\n        value={formHp}\n        onChange={(e, newValue)=>{\n          setFormHp(newValue)\n        }}\n        getAriaValueText={(e) => `${formHp}`}\n        />\n        </Box>\n\n        <Box>\n          <Button onClick={(e)=>{\n            queryCards();\n          }}><Box className={classes.queryButtonText}>Query</Box></Button>\n        </Box>\n      </Box>\n\n      { queryResultCardsArray.length > 0 && (<CardList cards={queryResultCardsArray} addTo={addTo} removeFrom={removeFrom}></CardList>)}\n      <Box display=\"flex\" justifyContent=\"center\">\n        { isQuerying && (\n          <Loader width={60} height={60} borderWidth={15}></Loader>\n        )}\n        { canLoadMore && !isLoadingMore && (\n          <Button onClick={(e)=>{\n            loadMoreCards()\n          }}>Load more</Button>\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import React, { useState, useEffect, useReducer, useContext } from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router, Routes, Route, useNavigate, useLocation } from 'react-router-dom';\nimport { makeStyles } from '@mui/styles';\n\nimport NavBar from './components/NavBar'\nimport RegisterForm from './components/RegisterForm';\nimport LoginForm from './components/LoginForm';\nimport FavoriteCardList from './components/FavoriteCardList';\nimport QueryBlock from './components/QueryBlock';\n\nimport request from 'request';\n\nimport * as raritiesEsModule from './static/rarities.json';\nimport * as typesEsModule from './static/types.json';\n\nexport const rarities = raritiesEsModule.default.data;\nexport const types = typesEsModule.default.data;\n\nexport const color_purple = \"#5052c9\";\nexport const color_white = \"#f5f6f7\";\nexport const font_weight = \"700\";\n\n//LoginForm & RegisterForm\nexport const MIN_PASSWORD_LENGTH = 4;\nexport const MAX_PASSWORD_LENGTH = 20;\n\nexport const QUERYING_API_PAGE_SIZE = 8;\n\nconst initialUserState = {\n  isLogin: false,\n  currentUserEmail: null,\n  favorite_cards: [],\n};\n\nfunction reducer(state, action) {\n  console.log('state', state);\n  console.log('action', action);\n  switch (action.type) {\n    case 'login':\n      const { isLogin, ...updatePayload } = action.payload;\n      console.log('updatePayload', updatePayload);\n      return { isLogin: true , ...updatePayload };\n    case 'update_favorite_cards':\n      const { favorite_cards, ...oldState} = state;\n      console.log('update_favorite_cards', { ...oldState, favorite_cards: action.payload.favorite_cards });\n      return { ...oldState, favorite_cards: action.payload.favorite_cards };\n    case 'logout':\n      return initialUserState;\n    default:\n      throw new Error();\n  }\n};\n\nexport const UserContext = React.createContext(null);\n\nexport function setSessionStorage(session){\n  removeSessionStorage();\n  let jsonStringOfNewSession = JSON.stringify(session);\n  localStorage.setItem(\"session\", jsonStringOfNewSession)\n}\n\nfunction removeSessionStorage(){\n  localStorage.removeItem(\"session\");\n}\n\nexport function getSessionStorage(){\n  const sessionCookie = localStorage.getItem(\"session\");\n  if(sessionCookie === \"undefined\" || !sessionCookie) return {};\n  else return JSON.parse(sessionCookie);\n}\n\nexport function getCurrentUser(){\n  const {currentUser} = getSessionStorage();\n  return currentUser;\n}\n\nexport const getUpdateUserPromise = function(updatingUser, form){\n  return new Promise(function(resolve) {\n    let options = {\n      'method': 'PATCH',\n      'url': `http://localhost:3000/users/${updatingUser.id}`,\n      'headers': {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(form)\n    };\n    request(options, function (error, response) {\n      if (error) throw error;\n      let responseObject = JSON.parse(response.body);\n      console.log(responseObject);\n      resolve(responseObject)\n    });\n\n  });\n}\n\nfunction App(props) {\n  let currentUserInLocalStorage = getCurrentUser();\n  let init;\n  if(currentUserInLocalStorage){\n    init = {\n      isLogin: true,\n      currentUserEmail: currentUserInLocalStorage.email,\n      favorite_cards: currentUserInLocalStorage.favorite_cards\n    };\n  }\n  else init = initialUserState;\n\n  const [userState, dispatch] = useReducer(reducer, initialUserState, () => {\n    return init\n  });\n\n  useEffect(() => {\n    let currentUserInLocalStorage = getCurrentUser();\n    if(currentUserInLocalStorage){\n      dispatch({type: 'login', payload: {currentUserEmail: currentUserInLocalStorage.email, favorite_cards: currentUserInLocalStorage.favorite_cards }});\n    }\n  },[]);\n\n\n  return (\n    <div className=\"App\">\n    <UserContext.Provider value={{userState, dispatch}}>\n    <Router>\n      <NavBar></NavBar>\n      <Routes>\n        <Route path=\"/\" element={<QueryBlock />}></Route>\n        <Route path=\"/favorite_list\" element={<FavoriteCardList/>}></Route>\n        <Route path=\"/login\" element={<LoginForm />}></Route>\n        <Route path=\"/register\" element={<RegisterForm />}></Route>\n        <Route path=\"/logout\" element={<Logout />}></Route>\n      </Routes>\n    </Router>\n    </UserContext.Provider>\n    </div>\n  );\n}\n\nfunction Logout() {\n  const { userState, dispatch } = useContext(UserContext);\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    removeSessionStorage();\n    dispatch({ type: 'logout' });\n    navigate(\"/\");\n  },[navigate, dispatch]);\n  return (\n    <></>\n  )\n};\n\nexport function Loader(props){\n  const { width, height, borderWidth } = props;\n  let useStyles = makeStyles({\n    loader: {\n      border: `${borderWidth || 15}px solid #f3f3f3`,\n      borderTop: `${borderWidth || 15}px solid #555555`,\n      borderRadius: \"50%\",\n      width: `${width || 60}px`,\n      height: `${height || 60}px`,\n      animation: \"App-logo-spin 2s linear infinite\",\n    }\n  })\n  let classes = useStyles();\n  return (\n    <div className={classes.loader}></div>\n  )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}